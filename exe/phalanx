#!/usr/bin/env ruby
# frozen_string_literal: true

require 'phalanx'

require 'sorted_set'
require 'amazing_print'

CLUB = '♣'
DIAMOND = '♦'
HEART = '♥'
SPADE = '♠'

SUITES = [CLUB, DIAMOND, HEART, SPADE].freeze

class Card
  include Comparable

  attr_reader :suite, :value

  def initialize(suite, value)
    @suite = suite
    @value = value
  end

  def to_s
    [suite, value].join
  end

  def to_a
    [value, suite]
  end

  def <=>(other)
    to_a <=> other.to_a
  end
end

values = (2..9)

deck = SortedSet.new
SUITES.each { |suite| values.each { |value| deck << Card.new(suite, value) } }

deck = deck.to_a.shuffle

hand = deck.shift(12)
hand.sort!
hand.reverse!

rows = {
  front: hand.shift(4),
  back: hand.shift(4)
}

player = { hand:, rows: }

ap player
